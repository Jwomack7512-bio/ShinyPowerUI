% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resizableSidebarLayout.R
\name{resizableSidebarLayout}
\alias{resizableSidebarLayout}
\title{Create a resizable and collapsible sidebar layout for Shiny apps.
This Shiny UI layout function provides a responsive two-panel layout with
a collapsible sidebar.}
\usage{
resizableSidebarLayout(
  sidebarContent,
  mainContent,
  barColor = "#e9e9e9",
  arrowSize = "default",
  hideBar = FALSE
)
}
\arguments{
\item{sidebarContent}{UI elements to be placed inside the sidebar.}

\item{mainContent}{UI elements to be placed in the main content area.}

\item{barColor}{(optional) Allows customization of the toggle button's
background color.}

\item{arrowSize}{(optional) Size of the arrow in the toggle button.}

\item{hideBar}{(optional) Boolean indicating whether the sidebar
should be hidden by default.}
}
\value{
A Shiny UI layout with a resizable and collapsible sidebar.
}
\description{
Features:
- Initial sidebar and main content sizes are set to 30% and 70% respectively.
- A toggle button, styled as an arrow, allows users to collapse or expand
  the sidebar.
- The toggle button's background color is customizable, with the default
  as a light grey (#e9e9e9).
- On hover, the toggle button enhances visibility by changing its
  background color and increasing the arrow size.
}
\examples{
\dontrun{
library(shiny)

ui <- resizableSidebarLayout(
  sidebarContent = sidebarPanel(
    shiny::tags$h3("Sidebar Content"),
    actionButton("btn", "Click Me!")
  ),
  mainContent = mainPanel(
    shiny::tags$h3("Main Content"),
    plotOutput("plot")
  ),
  barColor = "#3498db",
  arrowSize = "large",
  hideBarByDefault = FALSE
)

server <- function(input, output) {
  output$plot <- renderPlot({
    plot(1:10, main = "Example Plot")
  })
}

shinyApp(ui, server)
}

}
